instance itu variabel yang dihasilkan ketika mengalokasikan dg new thd object variabel

ntar artikan lagi yang ini
クラス(Class) ... 関連のある変数と関数をひとまとめにしたもの. 文法的には, C言語の構造体の内側に, その構造体を使う関数を入れたもの. ただし, C言語の構造体と同じく型であり, メモリを割り当てられた実体ではない. 型であるから, クラスを定義しただけでは, まだメモリは用意されない.
インスタンス(Instance) ... クラスにメモリを割り当てた実体. new演算子で生成する. C言語における, mallocで割り当てられたメモリブロック(メモリのかたまり)に相当する. 前回描いたメモリの図で, 矢印の先にあるメモリブロックに相当する. ※教科書等, 書籍によってはこの用語を「オブジェクト」と表す場合もある. この科目では下記の「オブジェクト変数」と明確に区別して欲しいため, 「インスタンス」を用いる.
オブジェクト変数(Object Variable) ... インスタンスを指す変数. C言語における, 構造体を指すポインタ変数に相当する. 前回描いたメモリの図で, 矢印の根元の変数に相当する. インスタンスのアドレスが入っている, と考えて良い. ※実際, System.out.println( )で表示すると, アドレス相当の16進数が表示される.
メソッド(Method) ... C言語の関数に相当する. ただし, Javaではメソッドは必ずクラスの内側に書かなければならない. mainメソッドも例外ではなく, 必ず何れかのクラスの中に書かなければならない.
フィールド(Field) ... メソッドと同じレベル(階層)にある変数. クラス内のすべてのメソッドで共通に使える. その意味で, C言語のグローバル変数を, 使える範囲をそのクラス内に限定したもの.
※注意: 一時的な計算結果やループカウンタ等, メソッド内のローカル変数はフィールドではない.

coba file html

karena ketika tidak new maka tidak ada dibuat instance baru
artinya b juga menunjuk ke instance yang sama dengan apa yan ditunjuk a
